# Generated by Django 2.2.14 on 2021-02-12 19:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('database', '0047_auto_20210208_2249'),
    ]

    operations = [
        migrations.AddField(
            model_name='study',
            name='forest_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='SummaryStatisticDaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(db_index=True)),
                ('distance_diameter', models.IntegerField()),
                ('distance_from_home', models.IntegerField()),
                ('distance_traveled', models.IntegerField()),
                ('flight_distance_average', models.IntegerField()),
                ('flight_distance_standard_deviation', models.IntegerField()),
                ('flight_duration_average', models.IntegerField()),
                ('flight_duration_standard_deviation', models.IntegerField()),
                ('gps_data_missing_duration', models.IntegerField()),
                ('home_duration', models.IntegerField()),
                ('physical_circadian_rhythm', models.FloatField()),
                ('physical_circadian_rhythm_stratified', models.FloatField()),
                ('radius_of_gyration', models.IntegerField()),
                ('significant_location_count', models.IntegerField()),
                ('significant_location_entropy', models.IntegerField()),
                ('stationary_fraction', models.TextField()),
                ('text_incoming_count', models.IntegerField()),
                ('text_incoming_degree', models.IntegerField()),
                ('text_incoming_length', models.IntegerField()),
                ('text_incoming_responsiveness', models.IntegerField()),
                ('text_outgoing_count', models.IntegerField()),
                ('text_outgoing_degree', models.IntegerField()),
                ('text_outgoing_length', models.IntegerField()),
                ('text_reciprocity', models.IntegerField()),
                ('call_incoming_count', models.IntegerField()),
                ('call_incoming_degree', models.IntegerField()),
                ('call_incoming_duration', models.IntegerField()),
                ('call_incoming_responsiveness', models.IntegerField()),
                ('call_outgoing_count', models.IntegerField()),
                ('call_outgoing_degree', models.IntegerField()),
                ('call_outgoing_duration', models.IntegerField()),
                ('acceleration_direction', models.TextField()),
                ('accelerometer_coverage_fraction', models.TextField()),
                ('accelerometer_signal_variability', models.TextField()),
                ('accelerometer_univariate_summaries', models.FloatField()),
                ('device_proximity', models.BooleanField()),
                ('total_power_events', models.IntegerField()),
                ('total_screen_events', models.IntegerField()),
                ('total_unlock_events', models.IntegerField()),
                ('awake_onset_time', models.DateTimeField()),
                ('sleep_duration', models.IntegerField()),
                ('sleep_onset_time', models.DateTimeField()),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Participant')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Study')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForestTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('forest_tree', models.CharField(max_length=10)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('file_size', models.IntegerField()),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('status', models.IntegerField(choices=[(1, 'queued'), (2, 'running'), (3, 'success'), (4, 'error')])),
                ('stacktrace', models.TextField(blank=True, default=None, null=True)),
                ('forest_version', models.CharField(max_length=10)),
                ('commit_hash', models.CharField(max_length=40)),
                ('metadata', models.TextField()),
                ('metadata_hash', models.CharField(max_length=64)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.Participant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApiKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('access_key_id', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z+/]+={0,2}$')])),
                ('access_key_secret', models.CharField(max_length=44, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z_\\-]+={0,2}$')])),
                ('access_key_secret_salt', models.CharField(max_length=24, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z_\\-]+={0,2}$')])),
                ('is_active', models.BooleanField(default=True)),
                ('has_tableau_api_permissions', models.BooleanField(default=False)),
                ('readable_name', models.TextField(blank=True, default='')),
                ('researcher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='api_keys', to='database.Researcher')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
