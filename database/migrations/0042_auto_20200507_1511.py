# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2020-05-07 15:11
from __future__ import unicode_literals

import database.common_models
from django.db import migrations, models
import django.db.models.deletion
import libs.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('database', '0041_redcaprecord'),
    ]

    operations = [
        migrations.CreateModel(
            name='CovidCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField()),
                ('country', models.CharField(max_length=20)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=20, null=True)),
                ('nation_total', models.PositiveIntegerField()),
                ('nation_deaths', models.PositiveIntegerField()),
                ('local_total', models.PositiveIntegerField()),
                ('local_deaths', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=libs.timezone.now)),
                ('event', models.CharField(max_length=50)),
                ('metadata', database.common_models.JSONTextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='FitbitCredentials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refresh_token', models.TextField()),
                ('access_token', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='FitbitRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField()),
                ('devices', models.TextField()),
                ('friends', models.TextField()),
                ('friends_leaderboard', models.TextField()),
                ('activities_calories', models.FloatField(blank=True, null=True)),
                ('activities_caloriesBMR', models.FloatField(blank=True, null=True)),
                ('activities_steps', models.PositiveIntegerField(blank=True, null=True)),
                ('activities_distance', models.FloatField(blank=True, null=True)),
                ('activities_minutesSedentary', models.PositiveIntegerField(blank=True, null=True)),
                ('activities_minutesLightlyActive', models.PositiveIntegerField(blank=True, null=True)),
                ('activities_minutesFairlyActive', models.PositiveIntegerField(blank=True, null=True)),
                ('activities_minutesVeryActive', models.PositiveIntegerField(blank=True, null=True)),
                ('activities_activityCalories', models.FloatField(blank=True, null=True)),
                ('body_bmi', models.FloatField(blank=True, null=True)),
                ('body_fat', models.FloatField(blank=True, null=True)),
                ('body_weight', models.FloatField(blank=True, null=True)),
                ('foods_log_caloriesIn', models.FloatField(blank=True, null=True)),
                ('foods_log_water', models.FloatField(blank=True, null=True)),
                ('activities_heart', models.TextField(blank=True, null=True)),
                ('sleep', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('United States', 'United States'), ('Canada', 'Canada'), ('Mexico', 'Mexico'), ('Brazil', 'Brazil'), ('Puerto Rico', 'Puerto Rico')], max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('zipcode', models.CharField(max_length=20)),
                ('timezone', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='Pollen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField()),
                ('country', models.CharField(max_length=20)),
                ('zipcode', models.CharField(max_length=20)),
                ('index', models.FloatField()),
                ('pollens', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrackRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(default=libs.timezone.now)),
                ('track_date', models.DateTimeField(unique=True)),
                ('cost_category', models.CharField(max_length=100)),
                ('cost', models.FloatField()),
                ('people_interacted', models.PositiveIntegerField()),
                ('screen_time', models.PositiveIntegerField()),
                ('mood', models.CharField(max_length=20)),
                ('weight', models.FloatField()),
                ('temperature', models.FloatField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='Weather',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField()),
                ('country', models.CharField(max_length=20)),
                ('zipcode', models.CharField(max_length=20)),
                ('weather', models.CharField(max_length=50)),
                ('temperature', models.FloatField()),
                ('humidity', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='weather',
            unique_together=set([('last_updated', 'country', 'zipcode')]),
        ),
        migrations.AlterUniqueTogether(
            name='pollen',
            unique_together=set([('last_updated', 'country', 'zipcode')]),
        ),
        migrations.AlterUniqueTogether(
            name='covidcase',
            unique_together=set([('last_updated', 'country', 'zipcode')]),
        ),
    ]
